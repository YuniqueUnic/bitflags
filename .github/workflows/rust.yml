name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  check:
    name: "Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
        - stable
        - beta
        - nightly

    steps:
    - name: Checkout repository
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

    - name: Install Rust Toolchain
      run: rustup default ${{ matrix.channel }}

    - name: Install cargo-hack
      run: cargo install cargo-hack

    - name: Powerset
      run: cargo hack test --feature-powerset --lib --optional-deps --depth 3 --skip "compiler_builtins core rustc-dep-of-std"

    - name: Docs
      run: cargo doc --features example_generated

    - name: Smoke test
      run: cargo run --manifest-path tests/smoke-test/Cargo.toml

  check-minimal:
    name: Check minimal versions
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

    - name: Install Rust Toolchain
      run: rustup default nightly

    - name: Check minimal versions
      run: cargo check --all --features serde,arbitrary,bytemuck,std,example_generated --all-targets -Z minimal-versions

  benches:
    name: Benches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Rust toolchain
        run: rustup default nightly

      - name: Default features
        run: cargo bench --no-run

  ui:
    name: UI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Rust toolchain
        run: rustup default beta

      - name: Compile pass
        run: cargo test pass

      - name: Compile fail
        run: cargo test fail

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install tombl
        run: cargo install tombl

      - name: Smoke test
        run: |
          eval $(tombl -e msrv=package.rust-version Cargo.toml)
          rustup update $msrv
          cd ./tests/smoke-test
          cargo +$msrv build

  miri:
    name: "Miri"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          cargo +nightly miri setup
      - name: Default features
        run: cargo +nightly miri test
      - name: BE
        run: cargo +nightly miri test --target s390x-unknown-linux-gnu

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Clippy
        run: |
          rustup update beta
          rustup component add clippy --toolchain beta

      - name: Default features
        run: |
          cd ./tests/smoke-test
          cargo +beta clippy

  embedded:
    name: Build (embedded)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Install Rust toolchain
        run: |
          rustup default nightly
          rustup target add thumbv6m-none-eabi

      - name: Default features
        run: cargo build -Z avoid-dev-deps --features example_generated --target thumbv6m-none-eabi
